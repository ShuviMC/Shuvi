# Here lie dragons!
#
# This action either builds the server or
# builds a paperclip jar to be updated in the body
# of the PR relating to this action.

name: Build Shuvi
on:
  push:
    paths:
      - 'patches/**'
  pull_request:
    paths:
      - 'patches/**'
    types:
      - opened
      - reopened
      - synchronize
      - labeled

# We only ever need one of these running on a single PR.
# Just let the newest one complete if there are multiple running.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    # Run on all label events (won't be duplicated) or all push events or on PR syncs not from the same repo
    if: (github.event_name == 'pull_request' && github.event.action == 'labeled') || github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [17]
      fail-fast: true
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: JDK ${{ matrix.java }}
        uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93 # v4.0.0
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@f9c9c575b8b21b6485636a91ffecd10e558c62f6 # v3
      - name: Setup Gradle
        uses: gradle/gradle-build-action@29c0906b64b8fc82467890bfb7a0a7ef34bda89e # v3

      - name: Configure Build
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        id: determine
        with:
          script: |
            const { owner, repo } = context.repo;
            const event_name = "${{ github.event_name }}";
            const event = ${{ toJSON(github.event) }};
            const ref_type = "${{ github.ref_type }}";
            const ref_name = "${{ github.ref_name }}";
            const result = {
              action: "build"
            };

            if (event_name === "push" && ref_type === "branch") {
              const { data: pulls } = await github.rest.pulls.list({ owner, repo, head: `${owner}:${ref_name}`, state: "open" });
              const pull = pulls.find(pr => !!pr.labels.find(label => label.name === "build-pr-jar"));
              if (pull) {
                result["pr"] = pull.number;
                result["action"] = "paperclip";
                core.notice(`This is a push action but to a branch with an open PR with the build paperclip label (${JSON.stringify(result)})`);
                return result;
              }
            } else if (event_name === "pull_request" && event.pull_request.labels.find(label => label.name === "build-pr-jar")) {
              result["pr"] = event.pull_request.number;
              result["action"] = "paperclip";
              core.notice(`This is a pull request action with a build paperclip label (${JSON.stringify(result)})`);
              return result;
            }
            core.notice("This will not build a paperclip jar");
            return result;

      - name: Apply Patches
        run: |
          git config --global user.email "no-reply@github.com"
          git config --global user.name "Github Actions"
          ./gradlew applyPatches --stacktrace

      - name: Build
        run: ./gradlew build --stacktrace

      - name: Create Paperclip Jar
        if: fromJSON(steps.determine.outputs.result).action == 'paperclip'
        run: ./gradlew createReobfPaperclipJar --stacktrace

      - name: Upload Paperclip Jar
        if: fromJSON(steps.determine.outputs.result).action == 'paperclip'
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4
        with:
          name: shuvi-${{ fromJSON(steps.determine.outputs.result).pr }}
          path: build/libs/Shuvi-paperclip-*-reobf.jar
